@Library('my-shared-library') _
pipeline{
    agent any
    parameters{
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'ImageName', description: "name of the docker build", defaultValue: 'ssjenkins')
        string(name: 'ImageTag', description: "tag of the docker build", defaultValue: 'v1')
        string(name: 'dockerHubUser', description: "name of the Application", defaultValue: 'surjeetcse')
    }
    stages{
        stage('Git Checkout'){
            when { expression {  params.action == 'create' } }
            steps{
            gitCheckout(branch: "master",url: "https://github.com/surjeetaxis/ssjenkins.git")
            }
        }
//         stage('Static code analysis: Sonarqube'){
//          when { expression {  params.action == 'create' } }
//             steps{
//                script{
//                    def SonarQubecredentialsId = 'sonarlocal-api'
//                    statiCodeAnalysis(SonarQubecredentialsId)
//                }
//             }
//         }
//         stage('Quality Gate Status Check : Sonarqube'){
//          when { expression {  params.action == 'create' } }
//             steps{
//                script{
//                    def SonarQubecredentialsId = 'sonarlocal-api'
//                    QualityGateStatus(SonarQubecredentialsId)
//                }
//             }
//         }
        stage('Maven Build : maven'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                   mvnBuild()
               }
            }
        }
        stage('Docker Image Build'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                   dockerBuild("${params.ImageName}","${params.ImageTag}","${params.dockerHubUser}")
               }
            }
        }
    }
}